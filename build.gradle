plugins {
    id "com.avast.gradle.docker-compose" version "0.6.6"
}

group 'com.codebrig.phenomena'
version '0.2.4'

apply plugin: 'groovy'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url 'https://repo.grakn.ai/repository/maven/'
    }
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13'
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.26'
    implementation 'org.codehaus.groovy:groovy-all:3.0.7'
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.17.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.5'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation group: 'io.grakn.client', name: 'grakn-client', version: "2.0.0-alpha-4"
    implementation files('lib/bblfsh-client-1.11.1.jar')
    implementation 'com.github.codebrig:arthur:d7d66a073a'
}

test {
    dependsOn "composeUp"
    finalizedBy "composeDown"
}

dockerCompose {
    useComposeFiles = ['./docker-compose.yml']
    dockerComposeWorkingDirectory = './docker/'
    captureContainersOutput = true
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/phenomena_build.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}
